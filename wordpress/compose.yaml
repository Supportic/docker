volumes:
  db_data:
    name: ${PROJECT_NAME}-dbdata
networks:
  default:
    name: ${PROJECT_NAME}-network
    driver: bridge
    external: false

services:
  ########################
  # Wordpress & Apache Web Server
  ########################
  wordpress:
    container_name: ${PROJECT_NAME}-wordpress
    image: ${PROJECT_NAME}/wordpress:0.0.1
    build:
      context: ./.docker/service/wordpress
      args:
        - UID=${UID}
        - GID=${GID}
        - UNAME=${UNAME}
        - GNAME=${GNAME}
        - PASS=${PASS}
      target: develop
    working_dir: /var/www/html
    restart: unless-stopped
    init: true
    user: ${UID:-1000}
    healthcheck:
      test: curl --fail http://localhost:${WORDPRESS_PORT_HOST:-80} || exit 1
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    # ports:
    #   - "${WORDPRESS_PORT_HOST:-80}:80"
    volumes:
      - ./wordpress:/var/www/html
      - ./wp-dev:/home/$UNAME/wp-dev:ro
    env_file:
      - .wordpress.env
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASS}
      WORDPRESS_TABLE_PREFIX: wp_
      WORDPRESS_DEBUG: 1
      # for symlink.sh, absolute paths only
      DEV_DIR: /home/$UNAME/wp-dev
      WORDPRESS_DIR: /var/www/html
    depends_on:
      db:
        condition: service_healthy
      memcached:
        condition: service_started

  ########################
  # PROXY (not required)
  ########################
  nginx:
    container_name: ${PROJECT_NAME}-nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "${WORDPRESS_PORT_HOST:-80}:80"
    volumes:
      - ./.docker/data/logs/nginx:/var/log/nginx
      - ./.docker/service/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/service/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - wordpress

  wpcli:
    container_name: ${PROJECT_NAME}-wpcli
    image: ${PROJECT_NAME}/wpcli:0.0.1
    user: ${UID:-1000}
    build:
      context: ./.docker/service/wpcli
      args:
        - UID=${UID}
        - GID=${GID}
        - UNAME=${UNAME}
        - GNAME=${GNAME}
        - PASS=${PASS}
    init: true
    # make curl localhost possible inside this container
    network_mode: "service:wordpress"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASS}
    # mirrors filesystem of the listed services
    volumes_from:
      - wordpress
    depends_on:
      db:
        condition: service_healthy

  ########################
  # Database
  ########################
  db:
    container_name: ${PROJECT_NAME}-db
    image: mariadb:11.4
    user: mysql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASS}
      MARIADB_ROOT_PASSWORD: ${DB_ROOTPASS}
    volumes:
      - db_data:/var/lib/mysql
      - ./.docker/service/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro

  memcached:
    image: memcached:alpine
    container_name: ${PROJECT_NAME}-memcached
    restart: unless-stopped
    expose:
      - 11211
    command:
      - --conn-limit=1024
      - --memory-limit=64
      - --threads=4

  ########################
  # Database UI
  ########################
  adminer:
    container_name: ${PROJECT_NAME}-adminer
    image: adminer:latest
    environment:
      # https://github.com/vrana/adminer/tree/master/plugins
      # ADMINER_PLUGINS: "tinymce tables-filter login-servers"
      # https://github.com/vrana/adminer/tree/master/designs
      # ADMINER_DESIGN: "nicu"
      # default server entry in the login form
      ADMINER_DEFAULT_SERVER: "db"
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT_HOST:-8080}:8080" # web ui
    volumes:
      - ./.docker/service/adminer/index.php:/var/www/html/index.php:ro

  ########################
  # Email Catcher
  #######################
  mailpit:
    container_name: ${PROJECT_NAME}-mailpit
    image: axllent/mailpit:latest
    restart: unless-stopped
    logging:
      driver: none # disable saving logs
    expose:
      - 1025 # smtp server
    ports:
      - "${MAILPIT_PORT_HOST:-8025}:8025" # web ui
    environment:
      TZ: Europe/Berlin
